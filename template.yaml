AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless S3 Uploader - upload files to S3 buckets from your web applications using pre-signed URLs.

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Api:
    # Allows any site to call these APIs (can restrict by replacing asterisk with site name)
    # Automatically adds AllowMethods with a list of methods for this API
    EndpointConfiguration: EDGE      
    Cors:
      AllowMethods: "'OPTIONS,GET,POST'"
      AllowHeaders: "'Content-Type'"
      AllowOrigin: "'*'" 
  Function:
    Timeout: 5

Resources:
  PhotoFixerS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ai-photo-fixer
      AccessControl: PublicRead
  UploadRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: upload-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:PutObjectAcl
                Resource:
                  !Sub
                    - "arn:aws:s3:::${BucketName}/*"
                    - {BucketName: !Ref PhotoFixerS3Bucket}
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  Fn::Sub:
                    - arn:aws:logs:${Region}:${AccountId}:log-group:/aws/lambda/*:*:*
                    - { Region: !Ref AWS::Region, AccountId: !Ref AWS::AccountId }
  S3UploaderFunction:
    # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: s3UploaderFunction/
      Handler: app.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Environment:
        Variables:
          UploadBucket: !Ref S3Bucket
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref S3Bucket
      Events:
        HttpPost:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: '/image/input'
            binaryMediaTypes:
              - 'multipart/form-data'
            Method: POST

Outputs:
  S3UploaderFunction:
    Description: "Lambda Function ARN"
    Value: !GetAtt S3UploaderFunction.Arn
  S3UploaderFunctionIamRole:
    Description: "Implicit IAM Role created for function"
    Value: !GetAtt S3UploaderFunctionRole.Arn
  S3BucketName:
    Description: S3 bucket
    Value: !Ref PhotoFixerS3Bucket